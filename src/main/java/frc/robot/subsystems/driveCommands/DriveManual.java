// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package frc.robot.subsystems.driveCommands;
import edu.wpi.first.wpilibj.command.Command;
import frc.robot.Robot;
import frc.robot.common.Convert;
public class DriveManual extends Command {

    public DriveManual() {
        requires(Robot.drive);
    }

    // Called just before this Command runs the first time
    @Override
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    @Override
    protected void execute() {
        double percentage = (1+Robot.drive.dkSpeedLow)-Robot.drive.getDriveSpeed();
        double coefficient = Convert.interpolate(0.6, 0.9, percentage);
        double forward = Robot.oi.driverXbox.getLeftY();
        double turn = coefficient*Robot.oi.driverXbox.getRightX();
        if(!Robot.getDualControl()&&!Robot.oi.solo.getPassable(true)){
           forward=turn=0; 
        }
        Robot.drive.setForward(forward);
        Robot.drive.setTurn(turn);
    }

    // Make this return true when this Command no longer needs to run execute()
    @Override
    protected boolean isFinished() {
        return false;
    }

    // Called once after isFinished returns true
    @Override
    protected void end() {
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    @Override
    protected void interrupted() {
    }
}
